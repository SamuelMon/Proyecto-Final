/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package proyecto.pkgfinal;

import java.awt.Color;
import static java.lang.Thread.sleep;
import java.util.ArrayList;
import java.util.Random;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JOptionPane;

/**
 *
 * @author sebas
 */
public class Board extends javax.swing.JFrame {

    public ArrayList<JLabel> lista = new ArrayList<>();
    public int totalPos, seg, min, hor, segTotal, actualPos = 0, points = 0, actualTime, tipoPregunta;
    public String[] question = new String[5];
    public GUI type = new GUI();
    public boolean state = true, show = false, change = false;
    public ArrayList<Integer> optionList = new ArrayList<>();
    public Random rdm = new Random();
    public ImageIcon imageHelp, imageButton;

    /**
     * Creates new form Board
     */
    public Board() {
        initComponents();
        puntaje.setText("Puntaje: " + String.valueOf(points));
        imageButton = new ImageIcon("src/imagenes/dado1.png");
        nxtPos.setIcon(imageButton);
        puntaje.setVisible(false);
        time.setVisible(false);
        nxtPos.setVisible(false);
        responder.setVisible(false);
        option1.setVisible(false);
        option2.setVisible(false);
        option3.setVisible(false);
        option4.setVisible(false);
        pregunta.setVisible(false);
        help.setVisible(false);
        hint.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        answers = new javax.swing.ButtonGroup();
        jScrollPane1 = new javax.swing.JScrollPane();
        panel = new javax.swing.JPanel();
        create = new javax.swing.JButton();
        numTxt = new javax.swing.JTextField();
        nxtPos = new javax.swing.JButton();
        puntaje = new javax.swing.JLabel();
        option1 = new javax.swing.JRadioButton();
        option2 = new javax.swing.JRadioButton();
        option3 = new javax.swing.JRadioButton();
        responder = new javax.swing.JButton();
        option4 = new javax.swing.JRadioButton();
        pregunta = new javax.swing.JLabel();
        time = new javax.swing.JLabel();
        help = new javax.swing.JLabel();
        hint = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        panel.setLayout(new java.awt.GridLayout(0, 3));
        jScrollPane1.setViewportView(panel);

        create.setText("Generar");
        create.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createActionPerformed(evt);
            }
        });

        nxtPos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nxtPosActionPerformed(evt);
            }
        });

        puntaje.setText("Puntaje");

        answers.add(option1);
        option1.setText("Opcion1");

        answers.add(option2);
        option2.setText("Opcion 2");

        answers.add(option3);
        option3.setText("Opcion 3");

        responder.setText("Responder");
        responder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                responderActionPerformed(evt);
            }
        });

        answers.add(option4);
        option4.setText("Opcion 4");

        pregunta.setText("Pregunta");

        time.setText("00:00:00");

        hint.setText("?");
        hint.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hintActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(numTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(create)
                .addGap(34, 34, 34)
                .addComponent(nxtPos, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 342, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(puntaje)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(time)
                                .addGap(16, 16, 16))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(option3)
                                    .addComponent(option4)
                                    .addComponent(option2)
                                    .addComponent(option1)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(41, 41, 41)
                                        .addComponent(responder)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(hint)))
                                .addGap(0, 14, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(pregunta)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(73, 73, 73)
                        .addComponent(help)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(create)
                        .addComponent(numTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(puntaje)
                        .addComponent(time))
                    .addComponent(nxtPos, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(pregunta)
                        .addGap(2, 2, 2)
                        .addComponent(help)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(option1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(option2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(option3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(option4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(responder)
                            .addComponent(hint))
                        .addGap(0, 130, Short.MAX_VALUE))
                    .addComponent(jScrollPane1))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void createActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createActionPerformed
        // TODO add your handling code here:
        totalPos = Integer.parseInt(numTxt.getText());
        panel.removeAll();
        lista.clear();
        actualPos = 0;
        for (int i = 0; i < totalPos; i++) {
            JLabel label = new JLabel(String.valueOf(i + 1));
            label.setBackground(Color.yellow);
            label.setOpaque(true);
            label.setHorizontalAlignment(0);
            lista.add(label);
            panel.add(label);
        }
        lista.get(actualPos).setBackground(Color.red);
        panel.updateUI();
        seg = 0;
        min = 0;
        hor = 0;
        cronometro();
        create.setVisible(false);
        puntaje.setVisible(true);
        time.setVisible(true);
        nxtPos.setVisible(true);
        numTxt.setVisible(false);
    }//GEN-LAST:event_createActionPerformed

    private void nxtPosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nxtPosActionPerformed
        // TODO add your handling code here:
        int adv = rdm.nextInt(6) + 1;
        switch (adv) {
            case 1:
                imageButton = new ImageIcon("src/imagenes/dado1.png");
                nxtPos.setIcon(imageButton);
                break;
            case 2:
                imageButton = new ImageIcon("src/imagenes/dado2.png");
                nxtPos.setIcon(imageButton);
                break;
            case 3:
                imageButton = new ImageIcon("src/imagenes/dado3.png");
                nxtPos.setIcon(imageButton);
                break;
            case 4:
                imageButton = new ImageIcon("src/imagenes/dado4.png");
                nxtPos.setIcon(imageButton);
                break;
            case 5:
                imageButton = new ImageIcon("src/imagenes/dado5.png");
                nxtPos.setIcon(imageButton);
                break;
            case 6:
                imageButton = new ImageIcon("src/imagenes/dado6.png");
                nxtPos.setIcon(imageButton);
                break;
        }
        if (actualPos + adv < totalPos) {
            lista.get(actualPos).setBackground(Color.yellow);
            actualPos = actualPos + adv;
            lista.get(actualPos).setBackground(Color.red);
            String pos = String.valueOf(actualPos);
            if (pos.endsWith("0") || pos.endsWith("5")) {
                tipoPregunta = 1;
                question = type.preguntaTipo1();
            } else if (pos.endsWith("1") || pos.endsWith("6")) {
                question = type.preguntaTipo2();
                tipoPregunta = 2;
                imageHelp = new ImageIcon("src/imagenes/teoremaPitagoras.jpg");
                help.setIcon(imageHelp);
            } else if (pos.endsWith("2") || pos.endsWith("7")) {
                question = type.preguntaTipo3();
                tipoPregunta = 3;
                imageHelp = new ImageIcon("src/imagenes/formulaCuadratica.jpg");
                help.setIcon(imageHelp);
            } else if (pos.endsWith("3") || pos.endsWith("8")) {
                question = type.preguntaTipo4();
                tipoPregunta = 4;
                imageHelp = new ImageIcon("src/imagenes/volumenCilindro.jpg");
                help.setIcon(imageHelp);
            } else if (pos.endsWith("4") || pos.endsWith("9")) {
                question = type.preguntaTipo5();
                tipoPregunta = 5;
                imageHelp = new ImageIcon("src/imagenes/volumenCaja.jpg");
                help.setIcon(imageHelp);
            }
            pregunta.setText(question[0]);
            asignarRespuestas();
            nxtPos.setEnabled(false);
            responder.setVisible(true);
            option1.setVisible(true);
            option2.setVisible(true);
            option3.setVisible(true);
            option4.setVisible(true);
            pregunta.setVisible(true);
            showHelp();
        } else {
            JOptionPane.showMessageDialog(null, "El número sacado se sale del tablero");
        }
    }//GEN-LAST:event_nxtPosActionPerformed

    private void responderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_responderActionPerformed
        // TODO add your handling code here:
        if (option1.isSelected() && option1.getText().equals(question[1])) {
            JOptionPane.showMessageDialog(null, "Correcto");
            points = points + 100;
        } else if (option2.isSelected() && option2.getText().equals(question[1])) {
            JOptionPane.showMessageDialog(null, "Correcto");
            points = points + 100;
        } else if (option3.isSelected() && option3.getText().equals(question[1])) {
            JOptionPane.showMessageDialog(null, "Correcto");
            points = points + 100;
        } else if (option4.isSelected() && option4.getText().equals(question[1])) {
            JOptionPane.showMessageDialog(null, "Correcto");
            points = points + 100;
        } else {
            JOptionPane.showMessageDialog(null, "Incorrecto");
            points = points - 50;
        }
        puntaje.setText("Puntaje: " + points);
        if (totalPos - 1 == actualPos) {
            state = false;
            JOptionPane.showMessageDialog(null, "<html>Fin del juego.<br/>Tiempo: " + time.getText() + "<br/>Puntaje: " + points);
        } else {
            nxtPos.setEnabled(true);
            responder.setVisible(false);
            option1.setVisible(false);
            option2.setVisible(false);
            option3.setVisible(false);
            option4.setVisible(false);
            pregunta.setVisible(false);
            help.setVisible(false);
            hint.setVisible(false);
            optionList.clear();
        }
        answers.clearSelection();
    }//GEN-LAST:event_responderActionPerformed

    private void hintActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hintActionPerformed
        // TODO add your handling code here:
        change = !change;
        help.setVisible(change);
    }//GEN-LAST:event_hintActionPerformed

    public void cronometro() {
        state = true;
        Thread hilo = new Thread() {
            public void run() {
                for (;;) {
                    if (state == true) {
                        try {
                            sleep(1000);
                            seg++;
                            segTotal++;
                            if (seg >= 60) {
                                seg = 0;
                                min++;
                            }
                            if (min >= 60) {
                                min = 0;
                                hor++;
                            }
                            time.setText(hor + ":" + min + ":" + seg);
                        } catch (InterruptedException e) {

                        }
                    } else {
                        break;
                    }
                }
            }
        };
        hilo.start();
    }

    public void showHelp() {
        show = false;
        actualTime = 0;
        Thread hilo = new Thread() {
            public void run() {
                for (;;) {
                    if (show == false) {
                        try {
                            sleep(1000);
                            actualTime++;
                            if (actualTime >= 7) {
                                if (tipoPregunta != 1){
                                show = true;
                                change = false;
                                hint.setVisible(show);
                                } else{
                                    show = true;
                                }
                            } else {
                                hint.setVisible(show);
                            }
                        } catch (InterruptedException e) {

                        }
                    } else {
                        break;
                    }
                }
            }
        };
        hilo.start();
    }

    public void asignarRespuestas() {
        for (int i = 0; optionList.size() < 4; i++) {
            int opt = rdm.nextInt(4) + 1;
            if (!optionList.contains(opt)) {
                optionList.add(opt);
            }
        }
        option1.setText(question[optionList.get(0)]);
        option2.setText(question[optionList.get(1)]);
        option3.setText(question[optionList.get(2)]);
        option4.setText(question[optionList.get(3)]);
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Board.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Board.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Board.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Board.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Board().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup answers;
    private javax.swing.JButton create;
    private javax.swing.JLabel help;
    private javax.swing.JButton hint;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField numTxt;
    private javax.swing.JButton nxtPos;
    private javax.swing.JRadioButton option1;
    private javax.swing.JRadioButton option2;
    private javax.swing.JRadioButton option3;
    private javax.swing.JRadioButton option4;
    private javax.swing.JPanel panel;
    private javax.swing.JLabel pregunta;
    private javax.swing.JLabel puntaje;
    private javax.swing.JButton responder;
    private javax.swing.JLabel time;
    // End of variables declaration//GEN-END:variables
}
